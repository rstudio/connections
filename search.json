[{"path":"https://rstudio.github.io/connections/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 connections authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://rstudio.github.io/connections/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Edgar Ruiz. Author, maintainer. Posit Software, PBC. Copyright holder, funder.","code":""},{"path":"https://rstudio.github.io/connections/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ruiz E (2023). connections: Integrates 'RStudio' Connections Pane 'pins'. R package version 0.2.0, https://rstudio.github.io/connections/, https://github.com/rstudio/connections.","code":"@Manual{,   title = {connections: Integrates with the 'RStudio' Connections Pane and 'pins'},   author = {Edgar Ruiz},   year = {2023},   note = {R package version 0.2.0, https://rstudio.github.io/connections/},   url = {https://github.com/rstudio/connections}, }"},{"path":"https://rstudio.github.io/connections/index.html","id":"connections","dir":"","previous_headings":"","what":"Integrates with the RStudio Connections Pane and pins","title":"Integrates with the RStudio Connections Pane and pins","text":"Installation Functions Uploading referencing tables dplyr Pin database connection Pin dplyr database query Full pins example BigQuery, via bigrquery PostgreSQL, via RPostgres DBI connections main goal connections integrate DBI-compliant packages RStudio IDE’s Connection Pane. Packages RPostgres, RSQLite, RMariaDB bigrquery connect R databases, provide direct integration Connections Pane. connections reads configuration connection creates integration RStudio. second goal provide integration pins package. connections package allows pin database connections dplyr table objects.","code":""},{"path":"https://rstudio.github.io/connections/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Integrates with the RStudio Connections Pane and pins","text":"Install development version GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"rstudio/connections\")"},{"path":"https://rstudio.github.io/connections/index.html","id":"functions","dir":"","previous_headings":"","what":"Functions","title":"Integrates with the RStudio Connections Pane and pins","text":"two main functions added connections : connection_open() - Opens database connection. Use instead dbConnect(), use exact arguments. also automatically starts Connections pane. connection_close() - Closes database connection.  connection can now closed using appropriate button Connections pane, using connection_close()  connection code parsed connecting database, visible connection closed.","code":"library(connections) library(RSQLite)  con <- connection_open(SQLite(), \"local.sqlite\") connection_close(con)"},{"path":"https://rstudio.github.io/connections/index.html","id":"uploading-and-referencing-tables-with-dplyr","dir":"","previous_headings":"","what":"Uploading and referencing tables with dplyr","title":"Integrates with the RStudio Connections Pane and pins","text":"connections integrates dplyr supporting following two functions: tbl() - create pointer table view within database. copy_to() - copy data R session database. version copy_to() inside connections automatically updates Connections pane, new table automatically shows . use existing table inside database use tbl().  tbl() function opens rest already available dplyr database integration.","code":"con <- connection_open(SQLite(), \"local.sqlite\")  copy_to(con, mtcars, temporary = FALSE, overwrite = TRUE) #> # Source:   table<mtcars> [?? x 11] #> # Database: sqlite 3.41.2 [/Users/edgar/r_projects/connections/local.sqlite] #>      mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1  21       6  160    110  3.9   2.62  16.5     0     1     4     4 #>  2  21       6  160    110  3.9   2.88  17.0     0     1     4     4 #>  3  22.8     4  108     93  3.85  2.32  18.6     1     1     4     1 #>  4  21.4     6  258    110  3.08  3.22  19.4     1     0     3     1 #>  5  18.7     8  360    175  3.15  3.44  17.0     0     0     3     2 #>  6  18.1     6  225    105  2.76  3.46  20.2     1     0     3     1 #>  7  14.3     8  360    245  3.21  3.57  15.8     0     0     3     4 #>  8  24.4     4  147.    62  3.69  3.19  20       1     0     4     2 #>  9  22.8     4  141.    95  3.92  3.15  22.9     1     0     4     2 #> 10  19.2     6  168.   123  3.92  3.44  18.3     1     0     4     4 #> # ℹ more rows db_mtcars <- tbl(con, \"mtcars\") db_mtcars %>%   group_by(am) %>%   summarise(avg_mpg = mean(mpg, na.rm = TRUE)) #> # Source:   SQL [2 x 2] #> # Database: sqlite 3.41.2 [/Users/edgar/r_projects/connections/local.sqlite] #>      am avg_mpg #>   <dbl>   <dbl> #> 1     0    17.1 #> 2     1    24.4"},{"path":"https://rstudio.github.io/connections/index.html","id":"pins","dir":"","previous_headings":"","what":"pins","title":"Integrates with the RStudio Connections Pane and pins","text":"connections package integrates pins. adds ability “pin” database connections queries. follows approach vetiver package. connections now two new functions: connection_pin_write() connection_pin_read()","code":""},{"path":"https://rstudio.github.io/connections/index.html","id":"pin-a-database-connection","dir":"","previous_headings":"pins","what":"Pin a database connection","title":"Integrates with the RStudio Connections Pane and pins","text":"connection_pin_write() function save R object. records code necessary recreate connection.  wish see code connections use recreating conneciton pin, can use connection_code(): connection_pin_read() replay exact code used initially connect database. Assign output variable, con1. variable work just like connection variable. con1 variable now regular database connection variable.","code":"library(pins) board <- board_folder(\"~/pins\")  connection_pin_write(board, con, name = \"my_conn\") #> Creating new version '20231218T234042Z-8d9ce' #> Writing to pin 'my_conn' connection_code(con) #> library(connections) #> library(RSQLite) #> con <- connection_open(SQLite(), \"local.sqlite\") con1 <- connection_pin_read(board, \"my_conn\") db_mtcars <- tbl(con1, \"mtcars\") %>%   group_by(am) %>%   summarise(avg_mpg = mean(mpg, na.rm = TRUE))  db_mtcars #> # Source:   SQL [2 x 2] #> # Database: sqlite 3.41.2 [/Users/edgar/r_projects/connections/local.sqlite] #>      am avg_mpg #>   <dbl>   <dbl> #> 1     0    17.1 #> 2     1    24.4"},{"path":"https://rstudio.github.io/connections/index.html","id":"pin-a-dplyr-database-query","dir":"","previous_headings":"pins","what":"Pin a dplyr database query","title":"Integrates with the RStudio Connections Pane and pins","text":"dplyr works database data, resulting query executed data explicitly collected R, printing top results R Console. pin records two things: dplyr R object contains transformations. save actual results. necessary information recreate database connection. make sure data retrieved original database connection.  connection_pin_read() connect database, return dplyr object. Without assigning variable, pin immediately print results database. results processed time connection_pin_read() runs.","code":"connection_pin_write(board, db_mtcars, name = \"avg_mpg\") #> Creating new version '20231218T234042Z-ae23e' #> Writing to pin 'avg_mpg' connection_pin_read(board, \"avg_mpg\") #> # Source:   SQL [2 x 2] #> # Database: sqlite 3.41.2 [/Users/edgar/r_projects/connections/local.sqlite] #>      am avg_mpg #>   <dbl>   <dbl> #> 1     0    17.1 #> 2     1    24.4"},{"path":"https://rstudio.github.io/connections/index.html","id":"full-pins-example","dir":"","previous_headings":"pins","what":"Full pins example","title":"Integrates with the RStudio Connections Pane and pins","text":"way pins integrates databases, via connections package, allows open connection pin, pipe subsequent code new pin. Afterwards, pin can used collect continue using dplyr object.","code":"board <- board_folder(\"~/pins\")  con <- connection_pin_read(board, \"my_conn\")  tbl_summary <- con %>%   tbl(\"mtcars\") %>%   group_by(cyl) %>%   summarise(avg_mpg = mean(mpg, na.rm = TRUE))   connection_pin_write(board, tbl_summary, name = \"cyl_mpg\") #> Creating new version '20231218T234042Z-835f4' #> Writing to pin 'cyl_mpg'  connection_close(con)  connection_pin_read(board, \"cyl_mpg\") #> # Source:   SQL [3 x 2] #> # Database: sqlite 3.41.2 [/Users/edgar/r_projects/connections/local.sqlite] #>     cyl avg_mpg #>   <dbl>   <dbl> #> 1     4    26.7 #> 2     6    19.7 #> 3     8    15.1"},{"path":"https://rstudio.github.io/connections/index.html","id":"back-end-examples","dir":"","previous_headings":"","what":"Back-end examples","title":"Integrates with the RStudio Connections Pane and pins","text":"couple examples Connections pane look opening connection via connections.","code":""},{"path":"https://rstudio.github.io/connections/index.html","id":"bigquery-via-bigrquery","dir":"","previous_headings":"Back-end examples","what":"BigQuery, via bigrquery","title":"Integrates with the RStudio Connections Pane and pins","text":"","code":"library(connections) library(bigrquery)  con <- connection_open(   bigquery(),   project = \"bigquery-public-data\",   dataset = \"austin_311\",   billing = \"my_project_billing\",   use_legacy_sql = FALSE ) connection_close(con)"},{"path":"https://rstudio.github.io/connections/index.html","id":"postgresql-via-rpostgres","dir":"","previous_headings":"Back-end examples","what":"PostgreSQL, via RPostgres","title":"Integrates with the RStudio Connections Pane and pins","text":"","code":"library(connections) library(RPostgres) con <- connection_open(   Postgres(),   host = \"localhost\",   dbname = \"datawarehouse\",   user = \"[user id]\",   password = \"[password]\",   bigint = \"integer\",   port = \"5432\" )"},{"path":"https://rstudio.github.io/connections/index.html","id":"dbi-connections","dir":"","previous_headings":"","what":"DBI connections","title":"Integrates with the RStudio Connections Pane and pins","text":"possible integrate DBI connections opened via connection_open(). , use connection_view() pass variable containing existing database connection.  Changes database automatically load Connections pane. connection_update() function refresh pane latest.","code":"library(DBI)  con <- dbConnect(RSQLite::SQLite(), \":memory:\")  connection_view(con) dbWriteTable(con, \"mtcars\", mtcars)  connection_update(con) connection_close(con)"},{"path":"https://rstudio.github.io/connections/reference/DBI.html","id":null,"dir":"Reference","previous_headings":"","what":"DBI methods — DBI","title":"DBI methods — DBI","text":"Implementations pure virtual functions defined `DBI` package.","code":""},{"path":"https://rstudio.github.io/connections/reference/DBI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DBI methods — DBI","text":"","code":"# S4 method for connConnection,ANY dbWriteTable(conn, name, value, ...)  # S4 method for connConnection dbSendQuery(conn, statement, ...)"},{"path":"https://rstudio.github.io/connections/reference/DBI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DBI methods — DBI","text":"conn DBIConnection object, returned dbConnect(). name table name, passed dbQuoteIdentifier(). Options : character string unquoted DBMS table name, e.g. \"table_name\", call Id() components fully qualified table name, e.g. Id(schema = \"my_schema\", table = \"table_name\") call SQL() quoted fully qualified table name given verbatim, e.g. SQL('\"my_schema\".\"table_name\"') value data.frame (coercible data.frame). ... parameters passed methods. statement character string containing SQL.","code":""},{"path":"https://rstudio.github.io/connections/reference/connection_close.html","id":null,"dir":"Reference","previous_headings":"","what":"Close a connection — connection_close","title":"Close a connection — connection_close","text":"Close connection","code":""},{"path":"https://rstudio.github.io/connections/reference/connection_close.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Close a connection — connection_close","text":"","code":"connection_close(con, host = \"\", type = \"\", leave_open = FALSE)"},{"path":"https://rstudio.github.io/connections/reference/connection_close.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Close a connection — connection_close","text":"con Connection variable host Host name connection. Optional, defaults empty type Type connection. Optional, defaults empty leave_open connection left open. Defaults FALSE","code":""},{"path":"https://rstudio.github.io/connections/reference/connection_close.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Close a connection — connection_close","text":"Returns NULL object. using RStudio IDE, attempt close connection identified `host` `type` arguments, con object","code":""},{"path":"https://rstudio.github.io/connections/reference/connection_close.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Close a connection — connection_close","text":"","code":"library(DBI) con <- connection_open(RSQLite::SQLite(), path = \":dbname:\") connection_close(con) con #> <connConnection>"},{"path":"https://rstudio.github.io/connections/reference/connection_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Displays the code that will be used to recreate the connection — connection_code","title":"Displays the code that will be used to recreate the connection — connection_code","text":"Displays code used recreate connection","code":""},{"path":"https://rstudio.github.io/connections/reference/connection_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Displays the code that will be used to recreate the connection — connection_code","text":"","code":"connection_code(con)"},{"path":"https://rstudio.github.io/connections/reference/connection_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Displays the code that will be used to recreate the connection — connection_code","text":"con `connConnection` object","code":""},{"path":"https://rstudio.github.io/connections/reference/connection_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Displays the code that will be used to recreate the connection — connection_code","text":"prints lines code package use reconnect database.","code":""},{"path":"https://rstudio.github.io/connections/reference/connection_open.html","id":null,"dir":"Reference","previous_headings":"","what":"Opens a connection — connection_open","title":"Opens a connection — connection_open","text":"Opens connection","code":""},{"path":"https://rstudio.github.io/connections/reference/connection_open.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Opens a connection — connection_open","text":"","code":"connection_open(..., open_pane = TRUE)"},{"path":"https://rstudio.github.io/connections/reference/connection_open.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Opens a connection — connection_open","text":"... Passes arguments wrapped connection function open_pane Signals RStudio Connections pane open. Defaults TRUE.","code":""},{"path":"https://rstudio.github.io/connections/reference/connection_open.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Opens a connection — connection_open","text":"Returns NULL object.  using RStudio IDE, attempt open connection","code":""},{"path":"https://rstudio.github.io/connections/reference/connection_open.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Opens a connection — connection_open","text":"","code":"library(DBI) con <- connection_open(RSQLite::SQLite(), path = \":dbname:\") con #> <connConnection> connection_close(con)"},{"path":"https://rstudio.github.io/connections/reference/connection_pin_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves a database connection or query from a board — connection_pin_read","title":"Retrieves a database connection or query from a board — connection_pin_read","text":"Retrieves database connection query board","code":""},{"path":"https://rstudio.github.io/connections/reference/connection_pin_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves a database connection or query from a board — connection_pin_read","text":"","code":"connection_pin_read(board, name, version = NULL)"},{"path":"https://rstudio.github.io/connections/reference/connection_pin_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves a database connection or query from a board — connection_pin_read","text":"board `pins` board object name name pin version version pin get (optional)","code":""},{"path":"https://rstudio.github.io/connections/reference/connection_pin_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieves a database connection or query from a board — connection_pin_read","text":"return either database connection, remote table database.","code":""},{"path":"https://rstudio.github.io/connections/reference/connection_pin_write.html","id":null,"dir":"Reference","previous_headings":"","what":"Writes a database connection or query to a board — connection_pin_write","title":"Writes a database connection or query to a board — connection_pin_write","text":"Writes database connection query board","code":""},{"path":"https://rstudio.github.io/connections/reference/connection_pin_write.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Writes a database connection or query to a board — connection_pin_write","text":"","code":"connection_pin_write(board, x, ...)"},{"path":"https://rstudio.github.io/connections/reference/connection_pin_write.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Writes a database connection or query to a board — connection_pin_write","text":"board `pins` board object x `connections` table database connection ... Additional arguments pass `pins::pin_write()`","code":""},{"path":"https://rstudio.github.io/connections/reference/connection_pin_write.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Writes a database connection or query to a board — connection_pin_write","text":"returns output.","code":""},{"path":"https://rstudio.github.io/connections/reference/connection_update.html","id":null,"dir":"Reference","previous_headings":"","what":"Refreshes a connection — connection_update","title":"Refreshes a connection — connection_update","text":"Refreshes connection","code":""},{"path":"https://rstudio.github.io/connections/reference/connection_update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Refreshes a connection — connection_update","text":"","code":"connection_update(con, hint = \"\")"},{"path":"https://rstudio.github.io/connections/reference/connection_update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Refreshes a connection — connection_update","text":"con Connection variable hint Optional argument passed Contract","code":""},{"path":"https://rstudio.github.io/connections/reference/connection_update.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Refreshes a connection — connection_update","text":"Returns NULL object. using RStudio IDE, attempt refresh connection identified attributes con object","code":""},{"path":"https://rstudio.github.io/connections/reference/connection_update.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Refreshes a connection — connection_update","text":"","code":"library(DBI) con <- connection_open(RSQLite::SQLite(), path = \":dbname:\") connection_update(con) connection_close(con)"},{"path":"https://rstudio.github.io/connections/reference/connection_view.html","id":null,"dir":"Reference","previous_headings":"","what":"Populates the RStudio Connection viewer — connection_view","title":"Populates the RStudio Connection viewer — connection_view","text":"Populates RStudio Connection viewer","code":""},{"path":"https://rstudio.github.io/connections/reference/connection_view.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Populates the RStudio Connection viewer — connection_view","text":"","code":"connection_view(   con,   connection_code = \"\",   host = \"\",   name = \"\",   connection_id = \"\" )"},{"path":"https://rstudio.github.io/connections/reference/connection_view.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Populates the RStudio Connection viewer — connection_view","text":"con Connection variable connection_code Text code connect source host Name Host connection name Connection name connection_id Unique ID connection current session","code":""},{"path":"https://rstudio.github.io/connections/reference/connection_view.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Populates the RStudio Connection viewer — connection_view","text":"populates RStudio Connections pane. returns nothing console session.","code":""},{"path":"https://rstudio.github.io/connections/reference/connection_view.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Populates the RStudio Connection viewer — connection_view","text":"","code":"library(DBI) con <- connection_open(RSQLite::SQLite(), path = \":dbname:\") connection_view(con) connection_close(con)"}]
